<MudDataGrid T="Face" Items="@Faces" ReadOnly="false" EditMode="DataGridEditMode.Cell" SortMode="SortMode.None">
    <Columns>
        <PropertyColumn Property="@(x => $"#{Faces.ToList().IndexOf(x) + 1}")" Title="Face Index" Editable="false" />
        <PropertyColumn Property="x => x.ResultType" Title="Result Type">
            <CellTemplate>
                @switch (context.Item.ResultType)
                {
                    case FaceResultType._0:
                        <MudText Class="mud-typography-nowrap">Empty</MudText>
                        break;
                    case FaceResultType._1:
                        <MudText Class="mud-typography-nowrap">Multiplier</MudText>
                        break;
                    case FaceResultType._2:
                        <MudText Class="mud-typography-nowrap">FixedAmount</MudText>
                        break;
                    case FaceResultType._3:
                        <MudText Class="mud-typography-nowrap">New Dice Play</MudText>
                        break;
                    case FaceResultType._4:
                        <MudText Class="mud-typography-nowrap">Raffle Ticket</MudText>
                        break;
                }
            </CellTemplate>
            <EditTemplate>
                <MudSelect For="@(() => context.Item.ResultType)" @bind-Value="context.Item.ResultType" Required RequiredError="You must select type" Margin="@Margin.Dense">
                    <MudSelectItem Value="FaceResultType._0" Class="mud-typography-nowrap">Empty</MudSelectItem>
                    <MudSelectItem Value="FaceResultType._1" Class="mud-typography-nowrap">Multiplier</MudSelectItem>
                    <MudSelectItem Value="FaceResultType._2" Class="mud-typography-nowrap">Fixed Amount</MudSelectItem>
                    <MudSelectItem Value="FaceResultType._3" Class="mud-typography-nowrap">New Dice Play</MudSelectItem>
                    <MudSelectItem Value="FaceResultType._4" Class="mud-typography-nowrap">Raffle Ticket</MudSelectItem>
                </MudSelect>
            </EditTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.ResultValue" Title="Result Value" Required="false">
            <HeaderTemplate>
                <MudTooltip Text="Some information about this">
                    <MudBadge Icon="@Icons.Material.Filled.Lock" Color="Color.Info" Overlap="true" Bordered="true" Class="mx-6 my-4">
                        <MudText>Result Value</MudText>
                    </MudBadge>
                </MudTooltip>
            </HeaderTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.Weight" Title="Weight" />
        <PropertyColumn Property="@(x => $"{x.Weight / Faces.Sum(x => x.Weight):P2}")" Title="Chance" Editable="false" />
        <TemplateColumn CellClass="mud-typography-align-right" Editable="false">
            <CellTemplate>
                <MudIconButton Icon="@Icons.Material.Outlined.Delete" OnClick="e => Faces.Remove(context.Item)" />
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>
<MudIconButton Icon="@Icons.Material.Outlined.Add" OnClick="e => Faces.Add(new())" Class="mt-2" />

@code {
    [Parameter]
    [EditorRequired]
    public ICollection<Face> Faces { get; set; } = [];
}